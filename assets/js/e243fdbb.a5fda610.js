"use strict";(self.webpackChunkfirplak_documentation=self.webpackChunkfirplak_documentation||[]).push([[2668],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},l=Object.keys(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)n=l[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,l=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=m(n),d=a,f=u["".concat(s,".").concat(d)]||u[d]||p[d]||l;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var l=n.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:a,i[1]=o;for(var m=2;m<l;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},3361:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return s},metadata:function(){return m},toc:function(){return c},default:function(){return u}});var r=n(7462),a=n(3366),l=(n(7294),n(3905)),i=["components"],o={title:"mail"},s="Module `src.lib.mail`",m={unversionedId:"desarrollos/reenvio-facture/lib/mail",id:"desarrollos/reenvio-facture/lib/mail",title:"mail",description:"Global variables",source:"@site/docs/desarrollos/reenvio-facture/lib/mail.md",sourceDirName:"desarrollos/reenvio-facture/lib",slug:"/desarrollos/reenvio-facture/lib/mail",permalink:"/documentacion/docs/desarrollos/reenvio-facture/lib/mail",editUrl:"https://github.com/firplak/documentacion/docs/desarrollos/reenvio-facture/lib/mail.md",tags:[],version:"current",frontMatter:{title:"mail"},sidebar:"defaultSidebar",previous:{title:"facture",permalink:"/documentacion/docs/desarrollos/reenvio-facture/lib/facture"},next:{title:"utils",permalink:"/documentacion/docs/desarrollos/reenvio-facture/lib/utils"}},c=[{value:"Global variables",id:"global-variables",children:[],level:2},{value:"Functions",id:"functions",children:[],level:2},{value:"Args",id:"args",children:[],level:2}],p={toc:c};function u(e){var t=e.components,n=(0,a.Z)(e,i);return(0,l.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"module-srclibmail"},"Module ",(0,l.kt)("inlineCode",{parentName:"h1"},"src.lib.mail")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    import smtplib\n    from email.mime.application import MIMEApplication\n    from email.mime.multipart import MIMEMultipart\n    from email.mime.text import MIMEText\n    from email.utils import formatdate\n    from .constants import CONFIG\n    \n    CREDENTIALS = {\n        "EMAIL": CONFIG["Email"]["EMAIL"],\n        "PASSWORD": CONFIG["Email"]["PASSWORD"],\n    }\n    """str: The credentials needed to send the email"""\n    \n    \n    def sendMail(send_to: str, subject: str, text: str, files: list = None) -> None:\n        """\n        Sends an email with the given parameters\n    \n        Args:\n            send_to (str): The recipient of the email\n            subject (str): The subject of the email\n            text (str): The body of the email\n            files (list, optional): All the files that will go attached with the email. Defaults to None.\n        """\n    \n        msg = MIMEMultipart()\n        msg["From"] = CREDENTIALS["EMAIL"]\n        msg["To"] = send_to\n        msg["Date"] = formatdate(localtime=True)\n        msg["Subject"] = subject\n    \n        msg.attach(MIMEText(text))\n    \n        for f in files or []:\n            part = MIMEApplication(\n                f["data"],\n                Name=f["name"],\n            )\n            # After the file is closed\n            part["Content-Disposition"] = \'attachment; filename="%s"\' % f["name"]\n            msg.attach(part)\n    \n        mailserver = smtplib.SMTP("smtp.office365.com", 587)\n        mailserver.ehlo()\n        mailserver.starttls()\n        mailserver.login(CREDENTIALS["EMAIL"], CREDENTIALS["PASSWORD"])\n        mailserver.sendmail(CREDENTIALS["EMAIL"], send_to, msg.as_string())\n        mailserver.close()\n')),(0,l.kt)("h2",{id:"global-variables"},"Global variables"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"var CREDENTIALS")),(0,l.kt)("p",null,"str: The credentials needed to send the email"),(0,l.kt)("h2",{id:"functions"},"Functions"),(0,l.kt)("p",null,(0,l.kt)("inlineCode",{parentName:"p"},"def sendMail(send_to:\xa0str, subject:\xa0str, text:\xa0str, files:\xa0list\xa0=\xa0None) \u2011>\xa0None")),(0,l.kt)("p",null,"Sends an email with the given parameters"),(0,l.kt)("h2",{id:"args"},"Args"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"send_to"))," :\u2002",(0,l.kt)("inlineCode",{parentName:"p"},"str")),(0,l.kt)("p",null,"The recipient of the email"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"subject"))," :\u2002",(0,l.kt)("inlineCode",{parentName:"p"},"str")),(0,l.kt)("p",null,"The subject of the email"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"text"))," :\u2002",(0,l.kt)("inlineCode",{parentName:"p"},"str")),(0,l.kt)("p",null,"The body of the email"),(0,l.kt)("p",null,(0,l.kt)("strong",{parentName:"p"},(0,l.kt)("inlineCode",{parentName:"strong"},"files"))," :\u2002",(0,l.kt)("inlineCode",{parentName:"p"},"list"),", optional"),(0,l.kt)("p",null,"All the files that will go attached with the email. Defaults to None."),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},'    def sendMail(send_to: str, subject: str, text: str, files: list = None) -> None:\n        """\n        Sends an email with the given parameters\n    \n        Args:\n            send_to (str): The recipient of the email\n            subject (str): The subject of the email\n            text (str): The body of the email\n            files (list, optional): All the files that will go attached with the email. Defaults to None.\n        """\n    \n        msg = MIMEMultipart()\n        msg["From"] = CREDENTIALS["EMAIL"]\n        msg["To"] = send_to\n        msg["Date"] = formatdate(localtime=True)\n        msg["Subject"] = subject\n    \n        msg.attach(MIMEText(text))\n    \n        for f in files or []:\n            part = MIMEApplication(\n                f["data"],\n                Name=f["name"],\n            )\n            # After the file is closed\n            part["Content-Disposition"] = \'attachment; filename="%s"\' % f["name"]\n            msg.attach(part)\n    \n        mailserver = smtplib.SMTP("smtp.office365.com", 587)\n        mailserver.ehlo()\n        mailserver.starttls()\n        mailserver.login(CREDENTIALS["EMAIL"], CREDENTIALS["PASSWORD"])\n        mailserver.sendmail(CREDENTIALS["EMAIL"], send_to, msg.as_string())\n        mailserver.close()\n')),(0,l.kt)("h1",{id:"index"},"Index"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"super-module"},"Super-module"),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:".",title:"src.lib"},"src.lib")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"global-variables-1"},(0,l.kt)("a",{parentName:"h3",href:"#header-variables"},"Global variables")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#src.lib.mail.CREDENTIALS",title:"src.lib.mail.CREDENTIALS"},"CREDENTIALS")))),(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("h3",{parentName:"li",id:"functions-1"},(0,l.kt)("a",{parentName:"h3",href:"#header-functions"},"Functions")),(0,l.kt)("ul",{parentName:"li"},(0,l.kt)("li",{parentName:"ul"},(0,l.kt)("a",{parentName:"li",href:"#src.lib.mail.sendMail",title:"src.lib.mail.sendMail"},"sendMail"))))),(0,l.kt)("p",null,"Generated by ",(0,l.kt)("a",{parentName:"p",href:"https://pdoc3.github.io/pdoc",title:"pdoc: Python API documentation generator"},"pdoc 0.10.0"),"."))}u.isMDXComponent=!0}}]);